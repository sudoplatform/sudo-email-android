fragment PublicKey on PublicKey {
    id
    keyId
    keyRingId
    algorithm
    keyFormat
    publicKey
    owner
    version
    createdAtEpochMs
    updatedAtEpochMs
}

fragment PaginatedPublicKey on PaginatedPublicKey {
    items {
        ...PublicKey
    }
    nextToken
}

fragment Owner on Owner {
    id
    issuer
}

fragment SealedAttribute on SealedAttribute {
    algorithm
    keyId
    plainTextType
    base64EncodedSealedData
}

fragment EmailAddressWithoutFolders on EmailAddress {
    id
    owner
    owners {
        id
        issuer
    }
    identityId
    keyRingId
    keyIds
    version
    createdAtEpochMs
    updatedAtEpochMs
    lastReceivedAtEpochMs
    emailAddress
    size
    numberOfEmailMessages
    alias {
        ...SealedAttribute
    }
}

fragment EmailAddress on EmailAddress {
    ...EmailAddressWithoutFolders
    folders {
        ...EmailFolder
    }
}

fragment EmailAddressPublicInfo on EmailAddressPublicInfo {
    emailAddress
    keyId
    publicKey
}

fragment EmailFolder on EmailFolder {
    id
    owner
    owners {
        id
        issuer
    }
    version
    createdAtEpochMs
    updatedAtEpochMs
    emailAddressId
    folderName
    size
    unseenCount
    ttl
    customFolderName {
      ...SealedAttribute
    }
}

fragment SealedEmailMessage on SealedEmailMessage {
    id
    owner
    owners {
        id
        issuer
    }
    emailAddressId
    version
    createdAtEpochMs
    updatedAtEpochMs
    sortDateEpochMs
    folderId
    previousFolderId
    direction
    seen
    repliedTo
    forwarded
    state
    clientRefId
    rfc822Header {
        algorithm
        keyId
        plainTextType
        base64EncodedSealedData
    }
    size
    encryptionStatus
}

fragment UpdateEmailMessagesResult on UpdateEmailMessagesV2Result {
  status
  failedMessages {
    id
    errorType
  }
  successMessages {
    id
    createdAtEpochMs
    updatedAtEpochMs
  }
}


fragment SendEmailMessageResult on SendEmailMessageResult {
  id
  createdAtEpochMs
}

fragment EmailConfigurationData on EmailConfigurationData {
    deleteEmailMessagesLimit
    updateEmailMessagesLimit
    emailMessageMaxInboundMessageSize
    emailMessageMaxOutboundMessageSize
    emailMessageRecipientsLimit
    encryptedEmailMessageRecipientsLimit
}

fragment BlockedAddress on BlockedEmailAddress {
    owner
    owners {
        id
        issuer
    }
    version
    createdAtEpochMs
    updatedAtEpochMs
    hashAlgorithm
    hashedBlockedValue
    sealedValue {
        ...SealedAttribute
    }
}

fragment BlockAddressesResult on BlockEmailAddressesBulkUpdateResult {
    status
    failedAddresses
    successAddresses
}

fragment UnblockAddressesResult on BlockEmailAddressesBulkUpdateResult {
    status
    failedAddresses
    successAddresses
}

fragment GetEmailAddressBlocklistResponse on GetEmailAddressBlocklistResponse {
  blockedAddresses {
    sealedValue {
      ...SealedAttribute
    }
    hashedBlockedValue
  }
}
